u8R"(// Predictor class

class @@PREDICTOR_CLASS@@ : public ell::api::CallbackForwarder<@@SOURCE_TYPE@@, @@SINK_TYPE@@>
{
public:
    @@PREDICTOR_CLASS@@() = default;
    virtual ~@@PREDICTOR_CLASS@@() = default;
};

#ifndef SWIG

extern "C"
{

int8_t @@SOURCE_CALLBACK@@(void* context, @@SOURCE_TYPE@@* input)
{
    auto predictor = reinterpret_cast<@@PREDICTOR_CLASS@@*>(context);
    return static_cast<int8_t>(predictor->InvokeInput(input));
}

void @@SINK_CALLBACK@@(void* context, @@SINK_TYPE@@* output)
{
    auto predictor = reinterpret_cast<@@PREDICTOR_CLASS@@*>(context);
    predictor->InvokeOutput(output);
}

void @@LAG_CALLBACK@@(void* context, @@TIMETICK_TYPE@@ lag)
{
    auto predictor = reinterpret_cast<@@PREDICTOR_CLASS@@*>(context);
    predictor->InvokeLagNotification(lag);
}

} // extern "C"

#endif // SWIG
)"