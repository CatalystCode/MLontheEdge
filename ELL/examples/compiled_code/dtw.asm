; ModuleID = 'ELL'
source_filename = "ELL"

@c_0 = internal constant [294 x double] [double 0xBFFAAED3768E4382, double 0xC00BF4E02A7F6BB8, double 0xBFFF049E1BD5822A, double 0xBFFB08AFBE0231D3, double 0xC00C08BB8232725B, double 0xBFFFB5A566710720, double 0xBFFB628C05762025, double 0xC00C1C96D9E578FE, double 0xC00033565886460B, double 0xBFF9EBC6B75EE40F, double 0xC0109905F67C938C, double 0xBFFB1ED277E65EAA, double 0xBFFA09022F2E09B3, double 0xC010AE1B858B5D0A, double 0xBFFB58F36332D5A7, double 0xBFFA263DA6FD2FB4, double 0xC010C331149A26CD, double 0xBFFB93144E7F4D5E, double 0xBFFA43791ECC54FB, double 0xC010D846A3A8F008, double 0xBFFBCD3539CBC3A2, double 0xBFFB214E93926F71, double 0xC011120D1F286AD5, double 0xBFFC3423844D9063, double 0xBFFCD9D236F1B7F9, double 0xC01308B39D5767CD, double 0xC000CBECE46A80E0, double 0xBFFE33C0E65F3E8C, double 0xC013426ED40995FE, double 0xC00115DBC8EFC5AF, double 0xBFFF8DAF95CCBFE5, double 0xC0137C2A0ABBC327, double 0xC0015FCAAD7509B8, double 0xC001587BE559C078, double 0xC0157EA2A197A064, double 0xC004064BA1587BB0, double 0xC015D8761E12471D, double 0xC028D2CF616D812F, double 0xC015897D9609E8F4, double 0xC016C703D8BA2345, double 0xC024E7FBB4BC4E78, double 0xC01AA51FDEC9F1CC, double 0xC01577C4A442EF83, double 0xC023ED6CAE09B072, double 0xC019629DC4F65A1A, double 0xC0150F2D7A7600F3, double 0xC0238EDBF5602599, double 0xC01904EC787E7AA7, double 0xC014B4B7D373F908, double 0xC02340E43502D7A1, double 0xC018BA4B99D42DEA, double 0xC014A4A4DD111C73, double 0xC02327D78EDEC0D9, double 0xC018AE1B61948B3B, double 0xC014A8FBDCBFCA30, double 0xC0231CD269CE17BD, double 0xC018AE19888A916D, double 0xC014A0BDBBB04E6D, double 0xC0231121799B6598, double 0xC018AB6882F87378, double 0xC014A0BDBBB04E6D, double 0xC0231121799B6598, double 0xC018AB6882F87378, double 0xC014A0BDBBB04E6D, double 0xC0231121799B6598, double 0xC018AB6882F87378, double 0xC014A0BDBBB04E6D, double 0xC0231121799B6598, double 0xC018AB6882F87378, double 0xC0150827F05BC394, double 0xC022FF04F44C5421, double 0xC01941AB4BDB78AC, double 0xC0153C1E9A1DD48E, double 0xC022FA0E37378BB5, double 0xC01985472A4B6542, double 0xC015701543DFE627, double 0xC022F5177A22C34B, double 0xC019C8E308BB52AD, double 0xC015A40BEDA1F762, double 0xC022F020BD0DFAFB, double 0xC01A0C7EE72B3FA7, double 0xC01683A1657472E5, double 0xC02311853A69D939, double 0xC01B2C1F36999C62, double 0xC01702A1566E05E3, double 0xC022B772B730038D, double 0xC01BA95C47B6D32D, double 0xC016FC0543C069FA, double 0xC022912B991755E4, double 0xC01BCADBAD7A9765, double 0xC016FB6447ABA05B, double 0xC0225FA59A6BEF25, double 0xC01BEF4DD6452F6F, double 0xC01746E2956A4F73, double 0xC022316E4BE62823, double 0xC01C42E0D590CE8F, double 0xC0174B6E93D28A43, double 0xC02203E5A96D78C6, double 0xC01C5734C8D8A1C7, double 0xC01755F5A8D39673, double 0xC021CB1E26621068, double 0xC01C6E7B7F274816, double 0xC0175109E2B53893, double 0xC021B11D23850582, double 0xC01C68F1A2A50B03, double 0xC01A07A996E90F2B, double 0xC020AE3281881F0F, double 0xC01E6DD89E434031, double 0xC0186CCE6A9AC447, double 0xC0211D7F1D6A5865, double 0xC01DB05F917D30A3, double 0xC01869DDC4CEC2B3, double 0xC0210D89503B7465, double 0xC01DB5EAD8C35F80, double 0xC01855C1535D5550, double 0xC020E57601480243, double 0xC01DA7EEFC345522, double 0xC01852D0AD9153BC, double 0xC020D58034191E43, double 0xC01DAD7A437A83FE, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC0184FE007C5521E, double 0xC020C58A66EA3A0F, double 0xC01DB3058AC0B2ED, double 0xC016E94589CBA001, double 0xC0202A31014DF6B5, double 0xC01CCAA52187E2E3, double 0xC014A0EEE1B7670A, double 0xC01DF4C95A472885, double 0xC01A239C69F34AAB, double 0xC00EC02B0B41468D, double 0xC01AD37C73172D5D, double 0xC016CF4D1497E420, double 0xC0078EFA971361A8, double 0xC01840529E5708CC, double 0xC01512B1237D0D88, double 0xC005672A7C7555C9, double 0xC0174CB25CBC9841, double 0xC014635AB7BA0799, double 0xC005B199BDEE2995, double 0xC0162195688936E0, double 0xC0132BA8468314A8, double 0xC002537DAB86FB60, double 0xC01630DC200CC865, double 0xC01364241FE5857A, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC0021B09DD368010, double 0xC0160E0450F2A858, double 0xC01340F68C5773E3, double 0xC001FCC25E8AAEFD, double 0xC015FD31EE216D15, double 0xC013289249DB445B, double 0xC001DE7ADFDEDDEB, double 0xC015EC5F8B5031D2, double 0xC013102E075F14D3, double 0xBFFD4EFBFC004E7E, double 0xC01400A5C03C97E1, double 0xC01272B9C68A2199, double 0xBFF3D44E58CA1993, double 0xC01137BA1F7FAEB8, double 0xC00F250321331E18, double 0xBFF297D30D61B9A7, double 0xC010C480F9FA7FAD, double 0xC00E1100A247732F, double 0xBFD366E6AF89060C, double 0xC00847ACCE4ADCEE, double 0xC0095E5AE3454048, double 0xBFE29BFAEC8EEA73, double 0xC00AD50705852FED, double 0xBFFDE8C30E1D30C5, double 0x3FDF135F84AF22C1, double 0xBFFF32CC144DF69F, double 0xBFE25756CDE44880, double 0x3FE10E501EF4D4A2, double 0xC0047851DE5936D5, double 0x3FE6AEC652E4746E, double 0xBFF42134EC67ABDF, double 0xC0034B058EA5022D, double 0x3FF9175FF3B557D7, double 0x3FF5343F6FB6847D, double 0xBFF8C0F0F7D19E39, double 0x3FF81C6A040EFBBE, double 0x3FF3FA89A20FF8F6, double 0xC006148CECB32926, double 0x4006151DF8DF0CD7, double 0x3FE4218362118C36, double 0xC005066C25F53E3D, double 0x4007BE01838C3B94, double 0x3FE3C08399CBFB4F, double 0xC00E2353082E167D, double 0x401062CF2CD04307, double 0x3FB756E3AFABDBC7, double 0xC0120CCECFAFDE8F, double 0x4016F80010429A47, double 0xBFF2E66E053A62FD, double 0xC01A87F2F9E4585B, double 0x4020695F89A47A26, double 0xBFFD2C5AB462EF05, double 0xC01E9C5C49FD3B6F, double 0x4020E7AB9A0B5497, double 0xC0007735258A9D98, double 0xC01FCCFA66D62D3A, double 0x40212FB00ED243F0, double 0xC001185AB8EB5252, double 0xC01FAD2149D41F56, double 0x402118DC4528C0FE, double 0xC00133E81B2152D5, double 0xC01FA38DCEB7FCD1, double 0x402110A0DB53EFAC, double 0xC00229DCF91E978D, double 0xC0200BBA3940AB25, double 0x40213FD7D72BF268, double 0xC0022B357BE7A688, double 0xC02000AAC65C3805, double 0x40213B0C853FAD08, double 0xC0022C8DFEB0B582, double 0xC01FEB36A6EF89ED, double 0x40213641335367B2, double 0xC0024B8470C188F8, double 0xC01FFBB66CCDAD56, double 0x402137E5A8ADA3EF, double 0xC001F4A3BE891EBC, double 0xC0227F60D08BED6F, double 0x4022DAE301FDFCCC, double 0xC0099A757B5ACDDF, double 0xC021C068C660FC92, double 0x4022461B43CD0800, double 0xC0117D5DD95CB752, double 0xC024F04D3033C669, double 0x40260B42CBF8E917, double 0xC0112170DD11AF43, double 0xC022B59B49EE05B3, double 0x4023340765AD0E93, double 0xC013465EEEA8C2D3, double 0xC022921B7660DAF8, double 0x402221425F5F9FDB, double 0xC01399176214E100, double 0xC0221CA5C1D211FD, double 0x40218D191DD1D6CC, double 0xC01438FE70313C45, double 0xC02314939A86DC12, double 0x4022269FBFEB5AAB, double 0xC014B8D5645AB8DC, double 0xC01FFAE3290E53A8, double 0x401E1699382BC169, double 0xC014E7EB9F87053E, double 0xC01ECD794049B2FD, double 0x401DBE4931FB8588, double 0xC014FD2CAC0F2F55, double 0xC01E4B78866C4FFB, double 0x401D3EB0774649A5, double 0xC015308094A0ABED, double 0xC01C6F3974E53A6A, double 0x401B9CE880AEB458, double 0xC015C807FD7DF557, double 0xC01DEAA645C81544, double 0x401AF6A040C2B51F, double 0xC01352C783D53348, double 0xC01CDB5AA9F80993, double 0x401AF58BCFD32E4A, double 0xC018BF098CF8E35F, double 0xC01A3B017C9C203C, double 0x401B645C22D147B4, double 0xC014F4C9B2306022, double 0xC0153B950D1E3343, double 0x401826E8CC0AD719]
@g_0 = internal global [99 x double] zeroinitializer

define void @predict(double* %input0, double* %output0) {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.after8, %entry
  %0 = phi i32 [ %15, %for.after8 ], [ 0, %entry ]
  %1 = phi double [ %30, %for.after8 ], [ undef, %entry ]
  %2 = phi i32 [ %4, %for.after8 ], [ 0, %entry ]
  %3 = icmp slt i32 %2, 98
  br i1 %3, label %for.body, label %for.after

for.body:                                         ; preds = %for.cond
  %4 = add i32 %2, 1
  %5 = sext i32 %2 to i64
  %6 = getelementptr [99 x double], [99 x double]* @g_0, i64 0, i64 %5
  %7 = load double, double* %6, align 8
  %8 = sext i32 %4 to i64
  %9 = getelementptr [99 x double], [99 x double]* @g_0, i64 0, i64 %8
  %10 = load double, double* %9, align 8
  %11 = fcmp olt double %10, %7
  %12 = select i1 %11, double %10, double %7
  %13 = fcmp ogt double %12, 0.000000e+00
  %. = select i1 %13, double 0.000000e+00, double %12
  br label %for.cond5

for.after:                                        ; preds = %for.cond
  %14 = fdiv double %1, 0x403557D14EE51E33
  store double %14, double* %output0, align 8
  ret void

for.cond5:                                        ; preds = %for.body6, %for.body
  %15 = phi i32 [ %28, %for.body6 ], [ %0, %for.body ]
  %16 = phi double [ %27, %for.body6 ], [ 0.000000e+00, %for.body ]
  %17 = phi i32 [ %29, %for.body6 ], [ 0, %for.body ]
  %18 = icmp slt i32 %17, 3
  br i1 %18, label %for.body6, label %for.after8

for.body6:                                        ; preds = %for.cond5
  %19 = sext i32 %17 to i64
  %20 = getelementptr double, double* %input0, i64 %19
  %21 = load double, double* %20, align 8
  %22 = sext i32 %15 to i64
  %23 = getelementptr [294 x double], [294 x double]* @c_0, i64 0, i64 %22
  %24 = load double, double* %23, align 8
  %25 = fsub double %21, %24
  %26 = call double @llvm.fabs.f64(double %25)
  %27 = fadd double %16, %26
  %28 = add i32 %15, 1
  %29 = add i32 %17, 1
  br label %for.cond5

for.after8:                                       ; preds = %for.cond5
  %30 = fadd double %16, %.
  store double %30, double* %9, align 8
  br label %for.cond
}

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #0

attributes #0 = { nounwind readnone }
